{"repo":{"0":"freeCodeCamp\/privacy-policy","1":"freeCodeCamp\/code-of-conduct","2":"freeCodeCamp\/shop","3":"freeCodeCamp\/league-for-good","4":"freeCodeCamp\/pantry-for-good","5":"freeCodeCamp\/search-assets","6":"freeCodeCamp\/eslint-config-freecodecamp","7":"freeCodeCamp\/open-api","8":"freeCodeCamp\/news-to-mobiledoc","9":"freeCodeCamp\/hackathon-leaderboard","10":"freeCodeCamp\/meeting-for-good","11":"freeCodeCamp\/python-coding-challenges","12":"freeCodeCamp\/open-data","13":"freeCodeCamp\/jamstack-hackathon","14":"freeCodeCamp\/gatsby-source-filesystem","15":"freeCodeCamp\/terms-of-service","16":"freeCodeCamp\/wiki","17":"freeCodeCamp\/classroom-mode","18":"freeCodeCamp\/react-bootstrap","19":"freeCodeCamp\/camper-probot","20":"freeCodeCamp\/arcade-mode","21":"freeCodeCamp\/react-notification","22":"freeCodeCamp\/camper-gitter-bot","23":"freeCodeCamp\/camper-gh-bot","24":"freeCodeCamp\/actual-react-router-bootstrap","25":"freeCodeCamp\/pm2-pager","26":"freeCodeCamp\/wiki-generator","27":"freeCodeCamp\/ZiplineStatusChecker","28":"freeCodeCamp\/persist","29":"freeCodeCamp\/cz-freecodecamp","30":"freeCodeCamp\/news","31":"freeCodeCamp\/donations-for-good","32":"freeCodeCamp\/search","33":"freeCodeCamp\/react-freecodecamp-search","34":"freeCodeCamp\/donate-page","35":"freeCodeCamp\/conference-for-good"},"language":{"0":"CSS","1":"CSS","2":"CSS","3":"JavaScript","4":"JavaScript","5":"JavaScript","6":"JavaScript","7":"JavaScript","8":"JavaScript","9":"JavaScript","10":"JavaScript","11":"Python","12":"HTML","13":"CSS","14":"JavaScript","15":"CSS","16":"JavaScript","17":"JavaScript","18":"JavaScript","19":"JavaScript","20":"JavaScript","21":"JavaScript","22":"JavaScript","23":"JavaScript","24":"JavaScript","25":"JavaScript","26":"JavaScript","27":"JavaScript","28":"JavaScript","29":"JavaScript","30":"CSS","31":"JavaScript","32":"JavaScript","33":"JavaScript","34":"CSS","35":"TypeScript"},"readme_contents":{"0":"> ### This page is now archived and managed in Ghost\n","1":"> ### This page is now archived and managed in Ghost\n","2":null,"3":"# FCC League-For-Good\n\nThis is a free, open-source web application designed to help sports leagues track their player and team stats, and simplify the other day-to-day tasks involved with team management. It was designed to accommodate many popular sports.\n\n## Join Us On Slack!\n\nYou can now join us on slack. [Get Invite Here](https:\/\/fcc-slack-invite.herokuapp.com\/)\n\n## Getting Started\n\n### Prerequisites\n\n- [NodeJS](https:\/\/nodejs.org)\n- [MongoDB](https:\/\/www.mongodb.org)\n\nIn order for the authorization component of this app to work, it needs to be registered with Google. Here is a helpful walkthrough of that process: https:\/\/developers.google.com\/identity\/sign-in\/web\/devconsole-project.\n\nYou will want to register **Type** as **Web application**, set **Authorized JavaScript origins** to\nhttp:\/\/localhost:4000 (if you're running the application locally) and set the **Authorized\nredirect URI** to http:\/\/localhost:4000\/auth\/google\/callback (this can be set through the Google API\nConsole Dashboard under **Credentials** if not offered as an option during setup).\n\nYou will also need to enable the \"Google+ API\" on the Google API Console Dashboard - if you forget,\nGoogle will display an error message (with a link to the API) the first time you try to log in.\n\n### Steps\n\n- Fork and clone the repo\n- Run `npm install`\n- In the root directory, create a .env file and place the following: \n  - MONGO_URI = *Your database uri - typically mongodb:\/\/localhost:27017\/your_project_name if your MongoDB is local* \n  - GOOGLE_CLIENT_ID = *Client id assigned by Google* \n  - GOOGLE_CLIENT_SECRET = *Client secret assigned by Google*\n  - SESSION_SECRET = *Any random string of characters*\n  - GOOGLE_CALLBACK_URL = http:\/\/localhost:4000\/auth\/google\/callback (*Use for the callback url in the Google API console*)\n- Open a new terminal session and run `mongod` if mongodb is on the local machine\n- Run `npm run dev`\n- Navigate to `localhost:4000` in your browser\n\n## Available Scripts\n\nIn the project directory, the following commands are available:\n\n### `npm install`\n\nInstalls all the dependencies\n\n### `npm run dev`\n\nBuilds the app for development. It is watched by webpack for any changes in the front end.\n\n## How to Contribute\nWe warmly welcome contributions from anyone. Check out our [how to contribute](https:\/\/github.com\/freeCodeCamp\/league-for-good\/blob\/master\/CONTRIBUTING.md) section to find out how you can do so.\n","4":"[![Build Status](https:\/\/travis-ci.org\/freeCodeCamp\/pantry-for-good.svg?branch=staging)](https:\/\/travis-ci.org\/freeCodeCamp\/pantry-for-good)\n[![Docker Repository on Quay](https:\/\/quay.io\/repository\/painejs\/pantry-for-good\/status \"Docker Repository on Quay\")](https:\/\/quay.io\/repository\/painejs\/pantry-for-good)\n[![Join the chat at https:\/\/gitter.im\/FreeCodeCamp\/pantry-for-good](https:\/\/badges.gitter.im\/FreeCodeCamp\/pantry-for-good.svg)](https:\/\/gitter.im\/FreeCodeCamp\/pantry-for-good?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nThis repository is for the Pantry-for-Good application designed by Open Source for Good Contributors at [freeCodeCamp](http:\/\/www.freecodecamp.com). For deployment instructions see the [deployment guide](DEPLOYMENT.md).\n\nIf you'd like to contribute, the [contributing guide](CONTRIBUTING.md) explains the git workflow and the [developers guide](https:\/\/github.com\/freeCodeCamp\/pantry-for-good\/wiki\/developer's-guide) gives an overview of how the app works. The [open issues](https:\/\/github.com\/freeCodeCamp\/pantry-for-good\/issues) are a good place to start, or you can try the app and add your own issues. If you get stuck or need help with something, feel free to leave a comment.\n\nSome issues are quite large, don't feel like you have to finish them, it's ok. Little bits help too! Start slow! \n\nThere's a demo app hosted at https:\/\/pantry-for-good.herokuapp.com, though it might be a bit behind the current version.\n\n## Installation\n\n------------\n### Local installation summary:\n1. Install [Node.js](http:\/\/nodejs.org) and [MongoDB](https:\/\/docs.mongodb.com\/manual\/installation\/#mongodb-community-edition)\n2. Start MongoDB\n3. `git clone https:\/\/github.com\/freeCodeCamp\/Pantry-for-Good.git`\n4. `cd Pantry-for-Good`\n5. Make sure you're on the 'staging' branch (`git branch`), otherwise run `git checkout staging`\n6. `npm install`\n7. `npm run dev`\n8. Open <http:\/\/localhost:8080> in your web browser\n9. Login with username `admin@example.com` password `password`\n\n\n------------\n### Detailed local development installation steps\n\nYou'll need to have a **Node.js** version >= 6 installed. Either use your OS's package manager or follow the installation instructions on the [official website](http:\/\/nodejs.org).\n\nThis app uses **MongoDB** as its database engine. Follow [these instructions](https:\/\/docs.mongodb.com\/manual\/installation\/#mongodb-community-edition) to install it locally and start the MongoDB server on your machine.\n\nInstall [git](https:\/\/git-scm.com\/book\/en\/v2\/Getting-Started-Installing-Git) if it is not already installed. To clone this repository to your local machine, open a command line interface and navigate to the directory where you would like to install the app. Then run\n`git clone https:\/\/github.com\/freeCodeCamp\/Pantry-for-Good.git`\n\nMove to the `Pantry-for-Good` directory and run the `npm install` command to install the application dependencies.\n\nType `npm run dev` to start the application in development mode. If all goes well, it will be available at `http:\/\/localhost:8080`.  The application is pre-populated with an administrator account with `admin@example.com` as username  and `password` as password.\n\n\n------------\n### Installing API keys\n\nTo use all the features of this application you will need to obtain API keys and install them in the application. After following the instructions below to obtain API Keys, put your keys in the file `server\/config\/env\/secrets.js`.\n\n#### 1. [gmapsApiKey](https:\/\/developers.google.com\/maps\/documentation\/javascript\/get-api-key)\nGoogle Maps API key for the deliveries feature. Currently, this key needs to be entered in the general settings page of your local instance of the application.\n#### 2. [oauth](https:\/\/developers.google.com\/identity\/sign-in\/web\/devconsole-project)\nGoogle+ API for allowing users to register\/login with google.\n#### 3. [sendgrid](https:\/\/sendgrid.com)\nSendgrid email API for sending emails.\n- Register for a trial account or deploy the app and get the username\/password from the heroku config vars\n- Go to [Settings > API Keys](https:\/\/app.sendgrid.com\/settings\/api_keys) and create a key\n- Paste the key in `secrets.js` or the `SENDGRID_API_KEY` config var of your deployed app.\n","5":"![freeCodeCamp Social Banner](https:\/\/s3.amazonaws.com\/freecodecamp\/wide-social-banner.png)\n\n# freeCodeCamp Search\n\nThis is the development repo for all things freeCodeCamp search\n\n## Under Construction\n\nWe are currently in the process of refactoring how we do things around here. Check back shortly to see how you can contribute.\n","6":null,"7":"![freeCodeCamp](https:\/\/camo.githubusercontent.com\/60c67cf9ac2db30d478d21755289c423e1f985c6\/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f66726565636f646563616d702f776964652d736f6369616c2d62616e6e65722e706e67)\n\n[![Gitter](https:\/\/badges.gitter.im\/FreeCodeCamp\/open-api.svg)](https:\/\/gitter.im\/FreeCodeCamp\/open-api?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n[![Build Status](https:\/\/travis-ci.org\/freeCodeCamp\/open-api.svg?branch=staging)](https:\/\/travis-ci.org\/freeCodeCamp\/open-api)\n[![Known Vulnerabilities](https:\/\/snyk.io\/test\/github\/freecodecamp\/open-api\/badge.svg?targetFile=package.json)](https:\/\/snyk.io\/test\/github\/freecodecamp\/open-api?targetFile=package.json)\n\n# open-api\n\n**This project is currently being refactored, performance and API will be unstable.**\n\n## About\n\nopen-api is a graphQL API that will serve multiple purposes:\n\n* serve the frontend of freeCodeCamp\n* an implementation of the freeCodeCamp's open-data policy\n* allow developers to build applications around the freeCodeCamp's eco-system and its open data sets\n\n## Urls\n\n| environment | url | method |\n ------- | --- | ---|\n| staging     | https:\/\/hxtsoafqna.execute-api.us-east-1.amazonaws.com\/stage\/api | GET | \n| staging     | https:\/\/hxtsoafqna.execute-api.us-east-1.amazonaws.com\/stage\/graphql | POST |\n| production | \n| production | \n\n## Contributing\n\nWe welcome pull requests \ud83c\udf89! Please follow [these steps](.github\/CONTRIBUTING.md) to contribute.\n\n## Updating certificates\n\nTokens are verified using public keys, each tenant will have their own certificate containing the public key.\n\nCertificates are stored either on developer laptops in .env files, or in an environment variable\nJWT_CERT for deployments. We use Travis for deployments, and `scripts\/deploy.sh`\nwill pick either JWT_CERT_STAGE or JWT_CERT_PROD and export it as JWT_CERT. This\nwill be picked up and deployed by Serverless.\n\nCertificates are base64 encoded to prevent encoding issues. This works around the\nfact that Travis uses Bash to export environment variables, which causes issues\nwith newlines and other characters have a special meaning in shells.\n\nTo add a new certificate, download it as a .pem file, and base64 encode it. Use `yarn encode-file` if you want a\nconvenient script:\n\n```bash\n\u25b6 yarn encode-file ~\/Downloads\/freecodecamp-dev.pem\nyarn run v1.6.0\n$ node scripts\/base64encode.js \/Users\/ojongerius\/Downloads\/freecodecamp-dev.pem\nOriginal contents:\n\n-----BEGIN CERTIFICATE-----\nMIIDDzCCAfegAwIBAgIJGHAmUeq9oGcAMA0GCSqGSIb3DQEBCwUAMCUxIzAhBgNV\n<SNIP>\nzIPPbMj9c6D7tETg2ZeHEthScPsgoPSHXxYu5N9ImoY\/KLjDD5Nk364e0M+ZT8rF\nrbgxgxHNJH92enBwsqrq7CWi2Q==\n-----END CERTIFICATE-----\n\nBase64 encoded (copy this):\n\nLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlERHpDQ0FmZWdBd0lCQWdJSkdIQW1VZXE5b0djQU1B\n<SNIP>\nMzY0ZTBNK1pUOHJGDQpyYmd4Z3hITkpIOTJlbkJ3c3FycTdDV2kyUT09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=\n\u2728  Done in 0.23s.\n```\n\nAnd copy the base64 encoded string to your destination.\n\n## Deployment\n\nDeployment is normally done by CI.\n\n### Manual Deployment\n\nIf you want to do a manual deployment:\n\nConfigure your AWS credentials, see <https:\/\/serverless.com\/framework\/docs\/providers\/aws\/guide\/credentials>\n\nEnsure that you have the `serverless` package install globally\n\n```sh\nyarn global add serverless\n```\n\nAssert that the stages configured in `serverless.yml` in line with what you'd like to deploy to, and run:\n\n```sh\nserverless --stage=YOUR_STAGE_HERE deploy\n```\n\n## Getting an API key\n\nTBD\n\n## License\n\nCopyright (c) 2018 freeCodeCamp.\n\nThe computer software in this repository is licensed under the [BSD-3-Clause](.\/LICENSE).\n","8":null,"9":"![freeCodeCamp Social Banner](https:\/\/s3.amazonaws.com\/freecodecamp\/wide-social-banner.png)\n\n# hackathon-leaderboard\n\n> [freeCodeCamp.org](https:\/\/www.freecodecamp.org)'s hackathon projects index for the [2018 JAMstack Hackathon](https:\/\/hackathon.freecodecamp.org\/).\n\n## Getting Started\n\nClone the repo:\n```sh\ngit clone https:\/\/github.com\/freeCodeCamp\/hackathon-leaderboard.git\ncd hackathon-leaderboard\n```\n\nInstall yarn:\n```js\nnpm install -g yarn\n```\n\nInstall dependencies:\n```sh\nyarn\n```\n\nSet environment (vars):\n```sh\ncp .env.example .env\n```\n\nStart server:\n```sh\n# Start server\nyarn start\n```\n\n# Testing Web Service locally with localtunnel\n\nYou can use [localtunnel](https:\/\/localtunnel.github.io\/www\/) to have a proxy https url for your application when working locally.\n\nThis is required for you to be able to test the netlify webhooks and GitHub OAuth login\n\n```sh\nnpm install -g localtunnel\nlt --port 4040 --subdomain=a-subdomain-that-you-want\n```\n\nThis will proxy your app over at\n\n```sh\nhttps:\/\/a-subdomain-that-you-want.localtunnel.me\/\n```\n\nYou should now be able to configure this for your GitHub OAuth and receive webhooks from netlify.\n\n# Selectively set DEBUG env var to get logs\nDEBUG=express-mongoose-es6-rest-api:* yarn start\n```\nRefer [debug](https:\/\/www.npmjs.com\/package\/debug) to know how to selectively turn on logs.\n\n\nTests:\n```sh\n# Run tests written in ES6\nyarn test\n\n# Run test along with code coverage\nyarn test:coverage\n\n# Run tests on file change\nyarn test:watch\n\n# Run tests enforcing code coverage (configured via .istanbul.yml)\nyarn test:check-coverage\n```\n\nLint:\n```sh\n# Lint code with ESLint\nyarn lint\n\n# Run lint on any file change\nyarn lint:watch\n```\n\nOther gulp tasks:\n```sh\n# Wipe out dist and coverage directory\ngulp clean\n\n# Default task: Wipes out dist and coverage directory. Compiles using babel.\ngulp\n```\n\n##### Deployment\n\n```sh\n# compile to ES5\n1. yarn build\n\n# upload dist\/ to your server\n2. scp -rp dist\/ user@dest:\/path\n\n# install production dependencies only\n3. yarn --production\n\n# Use any process manager to start your services\n4. pm2 start dist\/index.js\n```\n\nIn production you need to make sure your server is always up so you should ideally use any of the process manager recommended [here](http:\/\/expressjs.com\/en\/advanced\/pm.html).\nWe recommend [pm2](http:\/\/pm2.keymetrics.io\/) as it has several useful features like it can be configured to auto-start your services if system is rebooted.\n\n## Logging\n\nUniversal logging library [winston](https:\/\/www.npmjs.com\/package\/winston) is used for logging. It has support for multiple transports.  A transport is essentially a storage device for your logs. Each instance of a winston logger can have multiple transports configured at different levels. For example, one may want error logs to be stored in a persistent remote location (like a database), but all logs output to the console or a local file. We just log to the console for simplicity, you can configure more transports as per your requirement.\n\n#### API logging\nLogs detailed info about each api request to console during development.\n![Detailed API logging](https:\/\/cloud.githubusercontent.com\/assets\/4172932\/12563354\/f0a4b558-c3cf-11e5-9d8c-66f7ca323eac.JPG)\n\n#### Error logging\nLogs stacktrace of error to console along with other details. You should ideally store all error messages persistently.\n![Error logging](https:\/\/cloud.githubusercontent.com\/assets\/4172932\/12563361\/fb9ef108-c3cf-11e5-9a58-3c5c4936ae3e.JPG)\n\n## Code Coverage\nGet code coverage summary on executing `yarn test`\n![Code Coverage Text Summary](https:\/\/cloud.githubusercontent.com\/assets\/4172932\/12827832\/a0531e70-cba7-11e5-9b7c-9e7f833d8f9f.JPG)\n\n`yarn test` also generates HTML code coverage report in `coverage\/` directory. Open `lcov-report\/index.html` to view it.\n![Code coverage HTML report](https:\/\/cloud.githubusercontent.com\/assets\/4172932\/12625331\/571a48fe-c559-11e5-8aa0-f9aacfb8c1cb.jpg)\n\n## Docker\n\n#### Using Docker Compose for Development\n```sh\n# service restarts on file change\nbash bin\/development.sh\n```\n\n#### Building and running without Docker Compose\n```bash\n# To use this option you need to make sure mongodb is listening on port 27017\n\n# Build docker\ndocker build -t express-mongoose-es6-rest-api .\n\n# Run docker\ndocker run -p 4040:4040 express-mongoose-es6-rest-api\n```\n\n\n## A Boilerplate-only Option\n\nIf you would prefer not to use any of our tooling, delete the following files from the project: `package.json`, `gulpfile.babel.js`, `.eslintrc` and `.travis.yml`. You can now safely use the boilerplate with an alternative build-system or no build-system at all if you choose.\n\n## Docs and Recipes\n\n* [Gulp recipes](https:\/\/github.com\/gulpjs\/gulp\/tree\/master\/docs\/recipes) - the official Gulp recipes directory includes a comprehensive list of guides for different workflows you can add to your project.\n\n## Contributing\n\nContributions, questions and comments are all welcome and encouraged. For code contributions submit a pull request with unit test.\n\n## License\nThis project is licensed under the [MIT License](https:\/\/github.com\/kunalkapadia\/express-mongoose-es6-rest-api\/blob\/master\/LICENSE)\n","10":"[![Build Status](https:\/\/travis-ci.org\/freeCodeCamp\/meeting-for-good.svg?branch=master)](https:\/\/travis-ci.org\/freeCodeCamp\/meeting-for-good)\n[![codebeat badge](https:\/\/codebeat.co\/assets\/svg\/badges\/A-398b39-669406e9e1b136187b91af587d4092b0160370f271f66a651f444b990c2730e9.svg)](https:\/\/codebeat.co\/projects\/github-com-jrogatis-meeting-for-good-development-70f431f9-1e70-4bab-8318-0d348bab0998)\n# Meeting for Good\n\n[![Join the chat at https:\/\/gitter.im\/FreeCodeCamp\/meeting-for-good](https:\/\/badges.gitter.im\/FreeCodeCamp\/meeting-for-good.svg)](https:\/\/gitter.im\/FreeCodeCamp\/meeting-for-good?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\nA meeting coordination app for your team.\n\n## Get Meeting for Good running locally\n\n------------\n### Prerequisites\n- [NodeJS](https:\/\/nodejs.org)\n- [MongoDB](https:\/\/www.mongodb.org)\n\n------------\n### Quick Start Steps:\n- Fork the repo to your own account\n- Clone it to your computer:\n`git clone https:\/\/github.com\/[your_account_name]\/meeting-for-good.git && cd meeting-for-good`\n- Run `npm install`\n- Create a `.env` file in the root directory of the app with the following contents:\n```\nMONGO_URI=mongodb:\/\/localhost:27017\/meeting-for-good\nMONGO_URI_TEST=mongodb:\/\/localhost:27017\/test\nGOOGLE_KEY=[YOUR_GOOGLE_KEY]\nGOOGLE_SECRET=[YOUR_GOOGLE_SECRET]\nFACEBOOK_KEY=[YOUR_FACEBOOK_KEY]\nFACEBOOK_SECRET=[YOUR_FACEBOOK_SECRET]\nAPP_URL= http:\/\/localhost:8080\/\nNODE_ENV = 'development'\nAWS_ACCESS_KEY_ID='your AWS email user'\nAWS_SECRET_KEY='your AWS  email pass'\nEMAIL_FROM='default email from'\nANALYSE_PACK=false\nLINT_CODE=false\nGOOGLE_ANALYTICS_ID=[YOUR_GOOGLE_ANALYTICS_ID]\nGOOGLE_ANALYTICS_DEBUG=false\nOPBEAT_APP_ID=[YOUR_OPBEAT_APP_ID]\nOPBEAT_ORGANIZATION_ID=[YOUR_OPBEAT_ORGANIZATION_ID]\nOPBEAT_SECRET_TOKEN=[YOUR_OPBEAT_SECRET_TOKEN]\nSTATS_UPDATE_INTERVAL=[STATS_REFRESH_INTERVAL_IN_SECONDS (defaults to one hour if omitted)]\n\n```\nNOTE: The Google+ API and the Google Calendar API must be enabled when Google key and secret keys are created.\n\n- Open a new terminal session and run `mongod`\n- Run `npm run serve` from the app's root directory. This will start the app at port 8080 (unless overridden)\n\nTo build the app instead, run `npm run build`\n\n------------\n### Detailed local development installation steps\n\nYou'll need to have the latest version of **Node.js** installed. Either use your OS's package manager or follow the installation instructions on the [official website](http:\/\/nodejs.org).\n\nThis app uses **MongoDB** as its database engine. Follow [these instructions](https:\/\/docs.mongodb.com\/manual\/installation\/#mongodb-community-edition) to install it locally and start the MongoDB server on your machine.\n\nInstall [git](https:\/\/git-scm.com\/book\/en\/v2\/Getting-Started-Installing-Git) if it is not already installed. To clone this repository to your local machine, open a command line interface and navigate to the directory where you would like to the food-bank app directory to be in. Then run\n`git clone https:\/\/github.com\/freeCodeCamp\/meeting-for-good.git`\n\nMove to the `meeting-for-good` directory and run the `npm install` command to install the application dependencies.\n\nType `npm run dev` to start the application in development mode. If all goes well, it will be available at `http:\/\/localhost:8080`\n\n------------\n### Contributing\n\nWe welcome pull requests from seasoned Javascript developers. Please read our [guide](CONTRIBUTING.md)  first, then check out our open issues.\n","11":"FreeCodeCamp Python Curriculum\n=============\n\nView live: https:\/\/freecodecamp.github.io\/python-coding-challenges\n\nTo run locally:\n1. Fork this repo\n2. Run `git clone [your-fork-url]`\n3. Run `npm install`\n4. Run `npm run start`\n\nAdding a new challenge or fixing an existing one?\n\n- Generating challenge ID:\n  1. Open your terminal\n  2. run `mongo`\n  3. run `ObjectId()`\n  4. copy string and paste into lesson_settings.json\n\n- Building challenges.json file:\n  1. Open your terminal\n  2. Navigate to project directory\n  3. run `node generate-challenge-json.js`\n  4. if no errors are thrown you're good to commit and open a pr\n\n- Opening a PR\n  1. Include a reference to the issue\n  2. If its a new challenge, mention the chapter its being added to\n  3. continue being awesome and helping us create this curriculum!\n\n\nMaintaining your Fork:\n  1. `git remote add upstream https:\/\/github.com\/freeCodeCamp\/python-coding-challenges.git`\n  2. `git checkout master`\n  3. `git pull upstream`\n","12":"# open-data\n\nThe freeCodeCamp.org community creates tons of data every month, and we open up as much of that data as we can (while being careful to respect our learners' privacy).\n\nIn this repository, you will find:\n* **Datasets**\n* **Analyses** of those datasets\n* **Demos** of projects based on the freeCodeCamp data\n* **Links to External Projects** involving the freeCodeCamp data\n\nThe data can be of interest to, but not restricted to, those looking for datasets and projects about:\n* Web Analytics\n* Social Media Analysis\n* Social Network Analysis\n* Education Analytics\n* Data Visualization\n* Data-driven Web Development\n* Bots\n\n## List of project's folders\/submodules:\n\n> **NEW PROJECTS \/ DATASETS**:\n>\n> * **medium-fCC-data** : dataset : `fccmediumTitles - Cleaned_Data.tsv`\n> * **medium-fCC-data** : dataset : `medium_titles - rawdata.tsv`\n> * **google-analytics** : project and dataset : `challenges-performance-estimates`\n> * **google-analytics** : dataset : `countries-fCC`\n\nThe repo is thought to be organised according to the following:\n1. For small\/medium datasets, files will be left in the corresponding folder of this repository; optionally the files could be uploaded in any other service of the cloud\n2. For small\/medium datasets related to featured projects, files will be available on freeCodeCamp repositories as well as Kaggle\n3. For big datasets, full files will be available either on academictorrents or in [Kaggle](https:\/\/www.kaggle.com\/) (*soon*). A small sample of the file will be available in this repository as well as Kaggle for those who want to get introduced to the dataset.  \n\n\n### Main Projects:\n\n* **new-coder-surveys**\n* **open-api**\n* **gitter-history**\n* **google-analytics**\n\n### Other Projects:\n\n* **city-groups**\n* **unofficial-bots**\n* **leaderboard**\n* **facebook-fCC-data**\n* **gitter-analytics**\n* **medium-fCC-data**\n\nWe hope you can find these data helpful for you in your research and data science projects. \n","13":"# Welcome to freeCodeCamp's About page\n\nThis is a simple static website that we plan to expand once we release our open REST API.\n\nYou can view our about page live here: https:\/\/www.freecodecamp.com\/about\n\n","14":"# gatsby-source-filesystem\n\nPlugin for creating `File` nodes from the file system. The various \"transformer\"\nplugins transform `File` nodes into various other types of data e.g.\n`gatsby-transformer-json` transforms JSON files into JSON data nodes and\n`gatsby-transformer-remark` transforms markdown files into `MarkdownRemark`\nnodes from which you can query an HTML representation of the markdown.\n\n## Install\n\n`npm install --save gatsby-source-filesystem`\n\n## How to use\n\n```javascript\n\/\/ In your gatsby-config.js\nmodule.exports = {\n  plugins: [\n    \/\/ You can have multiple instances of this plugin\n    \/\/ to read source nodes from different locations on your\n    \/\/ filesystem.\n    \/\/\n    \/\/ The following sets up the Jekyll pattern of having a\n    \/\/ \"pages\" directory for Markdown files and a \"data\" directory\n    \/\/ for `.json`, `.yaml`, `.csv`.\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `pages`,\n        path: `${__dirname}\/src\/pages\/`,\n      },\n    },\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `data`,\n        path: `${__dirname}\/src\/data\/`,\n      },\n    },\n  ],\n}\n```\n\n## How to query\n\nYou can query file nodes like the following:\n\n```graphql\n{\n  allFile {\n    edges {\n      node {\n        extension\n        dir\n        modifiedTime\n      }\n    }\n  }\n}\n```\n\n## Helper functions\n\n`gatsby-source-filesystem` exports two helper functions:\n\n- `createFilePath`\n- `createRemoteFileNode`\n\n### createFilePath\n\nWhen building pages from files, you often want to create a URL from a file's path on the file system. E.g. if you have a markdown file at `src\/content\/2018-01-23-an-exploration-of-the-nature-of-reality\/index.md`, you might want to turn that into a page on your site at `example.com\/2018-01-23-an-exploration-of-the-nature-of-reality\/`. `createFilePath` is a helper function to make this task easier.\n\n```javascript\ncreateFilePath({\n  \/\/ The node you'd like to convert to a path\n  \/\/ e.g. from a markdown, JSON, YAML file, etc\n  node:\n  \/\/ Method used to get a node\n  \/\/ The parameter from `onCreateNode` should be passed in here\n  getNode:\n  \/\/ The base path for your files.\n  \/\/ Defaults to `src\/pages`. For the example above, you'd use `src\/contents`.\n  basePath:\n  \/\/ Whether you want your file paths to contain a trailing `\/` slash\n  \/\/ Defaults to true\n  trailingSlash:\n})\n```\n\n#### Example usage\n\nThe following is taken from [Gatsby Tutorial, Part Seven](https:\/\/www.gatsbyjs.org\/tutorial\/part-seven\/) and is used to create URL slugs for markdown pages.\n\n```javascript\nconst { createFilePath } = require(`gatsby-source-filesystem`)\n\nexports.onCreateNode = ({ node, getNode, boundActionCreators }) => {\n  const { createNodeField } = boundActionCreators\n  \/\/ Ensures we are processing only markdown files\n  if (node.internal.type === \"MarkdownRemark\") {\n    \/\/ Use `createFilePath` to turn markdown files in our `data\/faqs` directory into `\/faqs\/slug`\n    const relativeFilePath = createFilePath({\n      node,\n      getNode,\n      basePath: \"data\/faqs\/\",\n    })\n\n    \/\/ Creates new query'able field with name of 'slug'\n    createNodeField({\n      node,\n      name: \"slug\",\n      value: `\/faqs${relativeFilePath}`,\n    })\n  }\n}\n```\n\n### createRemoteFileNode\n\nWhen building source plugins for remote data sources such as headless CMSs, their data will often link to files stored remotely that are often convenient to download so you can work with them locally.\n\nThe `createRemoteFileNode` helper makes it easy to download remote files and add them to your site's GraphQL schema.\n\n```javascript\ncreateRemoteFileNode({\n  \/\/ The source url of the remote file\n  url: `https:\/\/example.com\/a-file.jpg`,\n\n  \/\/ The redux store which is passed to all Node APIs.\n  store,\n\n  \/\/ Gatsby's cache which the helper uses to check if the file has been downloaded already. It's passed to all Node APIs.\n  cache,\n\n  \/\/ The boundActionCreator used to create nodes\n  createNode,\n\n  \/\/ OPTIONAL\n  \/\/ Adds htaccess authentication to the download request if passed in.\n  auth: { htaccess_user: `USER`, htaccess_pass: `PASSWORD` },\n})\n```\n\n#### Example usage\n\nThe following example is pulled from [gatsby-source-wordpress](https:\/\/github.com\/gatsbyjs\/gatsby\/tree\/master\/packages\/gatsby-source-wordpress). Downloaded files are created as `File` nodes and then linked to the WordPress Media node, so it can be queried both as a regular `File` node and from the `localFile` field in the Media node.\n\n```javascript\nconst { createRemoteFileNode } = require(`gatsby-source-filesystem`)\n\nexports.downloadMediaFiles = ({ nodes, store, cache, createNode, _auth }) => {\n  nodes.map(async node => {\n    let fileNode\n    \/\/ Ensures we are only processing Media Files\n    \/\/ `wordpress__wp_media` is the media file type name for Wordpress\n    if (node.__type === `wordpress__wp_media`) {\n      try {\n        fileNode = await createRemoteFileNode({\n          url: node.source_url,\n          store,\n          cache,\n          createNode,\n          auth: _auth,\n        })\n      } catch (e) {\n        \/\/ Ignore\n      }\n    }\n\n    \/\/ Adds a field `localFile` to the node\n    \/\/ ___NODE appendix tells Gatsby that this field will link to another node\n    if (fileNode) {\n      node.localFile___NODE = fileNode.id\n    }\n  })\n}\n```\n\nThe file node can then be queried using GraphQL. See an example of this in the [gatsby-source-wordpress README](\/packages\/gatsby-source-wordpress\/#image-processing) where downloaded images are queried using [gatsby-transformer-sharp](\/packages\/gatsby-transformer-sharp\/) to use in the component [gatsby-image](\/packages\/gatsby-image\/).\n","15":"### [freeCodeCamp](https:\/\/freecodecamp.com)'s [Terms of Service](https:\/\/www.freecodecamp.com\/terms)\n","16":"# Depecrated Wiki!\n\n**This repo serves as an archive for the wiki and a place to report issues for our current wiki located in [our forum!](http:\/\/forum.freecodecamp.com\/c\/wiki)**\n\n>Our open source community's Wiki focuses on answering your questions about learning to code and getting a coding job. We also cover in detail our:\n\n>- Curriculum\n- Other Programming Languages\n- Local Group Communities\n- Nonprofit Projects and much more\n\n\n\n\n\n## License\n<a rel=\"license\" href=\"http:\/\/creativecommons.org\/licenses\/by-sa\/4.0\/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https:\/\/i.creativecommons.org\/l\/by-sa\/4.0\/88x31.png\" \/><\/a><br \/><span xmlns:dct=\"http:\/\/purl.org\/dc\/terms\/\" href=\"http:\/\/purl.org\/dc\/dcmitype\/StillImage\" property=\"dct:title\" rel=\"dct:type\">The Free Code Camp Wiki<\/span> by <a xmlns:cc=\"http:\/\/creativecommons.org\/ns#\" href=\"http:\/\/freecodecamp.com\" property=\"cc:attributionName\" rel=\"cc:attributionURL\">Free Code Camp<\/a> is licensed under a <a rel=\"license\" href=\"http:\/\/creativecommons.org\/licenses\/by-sa\/4.0\/\">Creative Commons Attribution-ShareAlike 4.0 International License<\/a>.<br \/>Based on a work at <a xmlns:dct=\"http:\/\/purl.org\/dc\/terms\/\" href=\"http:\/\/freecodecamp.com\" rel=\"dct:source\">http:\/\/freecodecamp.com<\/a>.\n","17":"# FCC Classroom Mode\n\n![freeCodeCamp](https:\/\/camo.githubusercontent.com\/60c67cf9ac2db30d478d21755289c423e1f985c6\/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f66726565636f646563616d702f776964652d736f6369616c2d62616e6e65722e706e67)\n\n[![Build Status](https:\/\/travis-ci.org\/freeCodeCamp\/classroom-mode.svg?branch=master)](https:\/\/travis-ci.org\/freeCodeCamp\/classroom-mode)\n\n## Mission\n\nFreecodecamp started out as an individual experience. But more and more teachers are using it to teach groups of students at a time. There is also an increasing number of study groups forming around freecodecamp. However, freecodecamp was not built with the group experience in mind. The goal of this project is to serve teachers and study groups.\n\nYou can view the interactive prototype for our MVP [here](https:\/\/projects.invisionapp.com\/share\/J3C03W2SX#\/screens)\n\n## Vision\n\n> It\u2019s 10pm at night, you\u2019re in a remote town, you should be able to log on virtually and code with a community.\n\nWe envision a multitude of communities around the world empowering themselves to learn coding. Our goal is to foster community learning.\n\n## Values\n\nWe strive to create a supportive learning environment for our contributors where they can find mentors as well as mentor others. We do this by encouraging pair programming as well as group coding sessions over zoom.\n\nWe take a data driven approach towards designing this product based on user feedback. We practice the principles of Lean Startup.\n\n## Contributing\n\nWe welcome pull-requests from freecodecamp campers. Please follow [these steps](.github\/CONTRIBUTING.md) to contribute. \n\n## License\n\nCopyright (c) 2018 freeCodeCamp.\n\nThe computer software in this repository is licensed under the [BSD-3-Clause](.\/LICENSE).","18":"# React-Bootstrap [![Travis][build-badge]][build] [![npm][npm-badge]][npm]\n\n[Bootstrap 3][bootstrap] components built with [React][react].\n\n[![Codecov][codecov-badge]][codecov]\n[![Discord][discord-badge]][discord]\n[![Thinkful][thinkful-badge]][thinkful]\n\n**Under active development - APIs will change.** Check out the [1.0.0 roadmap](https:\/\/github.com\/react-bootstrap\/react-bootstrap\/wiki#100-roadmap) and [contributing guidelines][contributing] to see where you can help out. Prior to the 1.0.0 release, deprecations or breaking changes will result in a minor version bump.\n\n## Docs\n\nSee the [documentation][documentation] with live editable examples.\n\n## Related modules\n\n* [react-router-bootstrap][react-router-bootstrap] \u2013 Integration with [React Router][react-router]\n* [React Bootstrap Extended][react-bootstrap-extended] - A version of React Bootstrap where each component has extra props that map to bootstrap's utility classes. For example, `pullRight` adds the class `pull-right` to a component.\n* [Awesome React Bootstrap Components][awesome-react-bootstrap-components] - Additional components like off-canvas navbar, switch and sliders.\n\n## Local setup\n\nYarn is the our package manager of choice here. Check out setup\ninstructions [here](https:\/\/yarnpkg.com\/en\/docs\/install) if you don't have it installed already.\nAfter that you can run `yarn run bootstrap` to install all the needed dependencies.\n\nFrom there you can:\n\n- Run the tests once with `yarn test` (Or run them in watch mode with `yarn run tdd`).\n- Start a local copy of the docs site with `yarn start`\n- Or build a local copy of the library with `yarn run build`\n\n## Contributions\n\nYes please! See the [contributing guidelines][contributing] for details.\n\n[bootstrap]: https:\/\/getbootstrap.com\/\n[react]: https:\/\/reactjs.org\/\n[documentation]: https:\/\/react-bootstrap.github.io\/\n[contributing]: CONTRIBUTING.md\n[build-badge]: https:\/\/travis-ci.org\/react-bootstrap\/react-bootstrap.svg?branch=master\n[build]: https:\/\/travis-ci.org\/react-bootstrap\/react-bootstrap\n[npm-badge]: https:\/\/badge.fury.io\/js\/react-bootstrap.svg\n[npm]: http:\/\/badge.fury.io\/js\/react-bootstrap\n[react-router-bootstrap]: https:\/\/github.com\/react-bootstrap\/react-router-bootstrap\n[react-router]: https:\/\/github.com\/reactjs\/react-router\n[react-bootstrap-extended]: https:\/\/github.com\/rbalicki2\/react-bootstrap-extended\n[awesome-react-bootstrap-components]: https:\/\/github.com\/Hermanya\/awesome-react-bootstrap-components\n[thinkful-badge]: https:\/\/tf-assets-staging.s3.amazonaws.com\/badges\/thinkful_repo_badge.svg\n[thinkful]: http:\/\/start.thinkful.com\/react\/?utm_source=github&utm_medium=badge&utm_campaign=react-bootstrap\n[codecov-badge]: https:\/\/img.shields.io\/codecov\/c\/github\/react-bootstrap\/react-bootstrap\/master.svg\n[codecov]: https:\/\/codecov.io\/gh\/react-bootstrap\/react-bootstrap\n[discord-badge]: https:\/\/img.shields.io\/badge\/Discord-Join%20chat%20%E2%86%92-738bd7.svg\n[discord]: https:\/\/discord.gg\/0ZcbPKXt5bXLs9XK\n","19":"# camper-probot\n\n> A GitHub App built with [Probot](https:\/\/github.com\/probot\/probot) that A probot application for managing freeCodeCamp&#x27;s GitHub repositories.\n\n## Setup\n\n```sh\n# Install dependencies\nnpm install\n\n# Run the bot\nnpm start\n```\n\n## Contributing\n\nIf you have suggestions for how camper-probot could be improved, or want to report a bug, open an issue! We'd love all and any contributions.\n\nFor more, check out the [Contributing Guide](CONTRIBUTING.md).\n\n## License\n\n[ISC](LICENSE) \u00a9 2018 freeCodeCamp.org <team@freecodecamp.org> (https:\/\/github.com\/freeCodeCamp\/camper-probot)\n","20":"# freeCodeCamp's Arcade Mode\n\n[![Join the chat at https:\/\/gitter.im\/FreeCodeCamp\/arcade-mode](https:\/\/badges.gitter.im\/FreeCodeCamp\/arcade-mode.svg)](https:\/\/gitter.im\/FreeCodeCamp\/arcade-mode?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nArcade Mode is an interview preparation app featuring algorithm and data structure questions in a timed environment. The end goal will be its incorporation into freeCodeCamp proper as part of the coding interview preparation section.\n\n### Note:\nArcade Mode has been undergoing heavy prototyping and iteration. As such, it is currently set up with development and debugging in mind.\n\n## Quick Start:\n1. [Fork the repository](https:\/\/help.github.com\/articles\/fork-a-repo\/) using the \"Fork Button\" in the upper right hand corner of the interface.\n2. Clone your fork using `git clone https:\/\/github.com\/<YOUR_GITHUB_USERNAME>\/arcade-mode.git` into your projects directory (e.g., `\/<YOUR_PROJECTS_DIRECTORY>\/`\n3. Go into the new arcade-mode directory.\n4. Run `npm install` to install dependencies and start the build process. If you run into errors, please refer to the FAQ down below.\n5. Run `npm start` and see the example app at http:\/\/localhost:8080\n\n## Fork Maintenance:\n1. Set the upstream remote to the official arcade-mode repository: `git remote add upstream https:\/\/github.com\/freeCodeCamp\/arcade-mode.git`\n2. Update the fork locally by pulling from the upstream remote: `git pull upstream master`.\n3. Push the updates to your fork repository with `git push origin master`.\n\n\n## Contributing:\n- After finishing Quick Start steps 1 - 4, do the following:\n1. Find an issue that needs assistance by searching for the [Help Wanted](https:\/\/github.com\/freeCodeCamp\/arcade-mode\/labels\/help%20wanted) tag.\n2. Always make modifications on a branch. Create a branch using: `git checkout -b <BRANCH_NAME>`.\n3. Test modifications with unit tests `npm run test:client` and in-app validation on the browser.\n3. Once it all checks out, submit a [pull request](https:\/\/help.github.com\/articles\/creating-a-pull-request\/).\n\nFor a more complete guide, see CONTRIBUTING.md.\n\n## FAQ:\n\n> I'm receiving errors about the npm package, canvas. How can I fix this?\n\nThe canvas package has prerequisites that need to be installed before canvas can be installed correctly. Please refer to [its npm page](https:\/\/www.npmjs.com\/package\/canvas) for installation instructions that depend on the operating system.\n\n> I'm receiving `package not found` errors on `npm install`. How can I fix this?\n\nTry removing the `node_modules` directory, then `npm install` again. If this does not work, remove both `node_modules` and `package-lock.json` and try `npm install` again.\n\n> I'm receiving the error \"Received a non-Vinyl object in `dest()`\". How can I fix this?\n\nRemove the node_modules folder and `npm install` again.\n\n> Is there a way I can automate `npm run test:client` to run when I try to push?\n\nYou can use git hooks. We are currently using this `pre-push` script [here](https:\/\/github.com\/freeCodeCamp\/arcade-mode\/blob\/master\/bin\/pre-push), but you may want to tailor it to a different branch or all branches. The project's git hooks can be found in the `\/bin` directory (i.e., `pre-push` and `post-merge`).\n","21":"# React Notification\n\n[![npm version](https:\/\/badge.fury.io\/js\/react-notification.svg)](http:\/\/badge.fury.io\/js\/react-notification) [![Build Status](https:\/\/travis-ci.org\/pburtchaell\/react-notification.svg)](https:\/\/travis-ci.org\/pburtchaell\/react-notification) [![npm downloads](https:\/\/img.shields.io\/npm\/dm\/react-notification.svg?style=flat)](http:\/\/badge.fury.io\/js\/react-notification)\n\n![](https:\/\/raw.githubusercontent.com\/pburtchaell\/react-notification\/master\/docs\/example-b.gif)\n\nReact Notification is a component designed to provide snackbar notification messages and notification stacks. The default visual style and interaction follows [Material Design guidelines for snackbars](http:\/\/www.google.com\/design\/spec\/components\/snackbars-toasts.html#snackbars-toasts-usage), but it can be fully customized.\n\n## Documentation and Help\n\n- [Guides](\/docs\/guides\/)\n- [Introduction](\/docs\/introduction.md)\n- [Examples](\/examples)\n- [Releases](https:\/\/github.com\/pburtchaell\/react-notification\/releases)\n- [Upgrading versions](\/UPGRADING.md)\n\n---\nCopyright (c) 2015-2018 Patrick Burtchaell. [Licensed with The MIT License (MIT)](https:\/\/raw.githubusercontent.com\/pburtchaell\/react-notification\/master\/LICENSE).\n","22":"# CamperBot\n\n[![Join the chat at https:\/\/gitter.im\/FreeCodeCamp\/camperbot](https:\/\/badges.gitter.im\/Join%20Chat.svg)](https:\/\/gitter.im\/FreeCodeCamp\/camperbot) [![Stories in Ready](https:\/\/badge.waffle.io\/FreeCodeCamp\/camperbot.png?label=ready&title=Ready)](https:\/\/waffle.io\/FreeCodeCamp\/camperbot)\n\nThis is a full featured bot for\n[Gitter.im\/FreeCodeCamp](https:\/\/gitter.im\/orgs\/FreeCodeCamp\/rooms) chat rooms.\n\n**Main features:**\n\n-   integration with github FCC wiki\n-   `find` (alias `explain`) command to show wiki pages\n-   wrapper for commands\n\nThe CamperBot is integrated into various FreeCodeCamp chat rooms.\n\nJoin us in\n[Gitter.im\/FreeCodeCamp\/camperbot](https:\/\/gitter.im\/FreeCodeCamp\/camperbot)\nto discuss about camperbot development!\n\nTest the CamperBot in the\n[Gitter.im\/FreeCodeCamp\/camperbotPlayground](https:\/\/gitter.im\/FreeCodeCamp\/camperbotPlayground)\nroom.\n\nCamperBot was originally created by for [Free Code Camp](https:\/\/www.freecodecamp.org) by [@dcsan](https:\/\/github.com\/dcsan) at [RIKAI Labs](mailto:dc@rikai.co), and is now maintained by our open source community.\n\n## Contents\n-   [Introducing CamperBot!](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#introducing-camperbot)\n-   [Installation instructions](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#installation-instructions)\n  -   [Mac \/ Linux](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#mac--linux)\n  -   [Windows](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#windows)\n- [Make your own bot user](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#make-your-own-bot-user)\n  -   [Getting your own appID](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#getting-your-own-appid)\n  - [Configure your bot!](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#configure-your-bot)\n-   [Running tests](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#running-tests)\n-   [Wiki Content](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#wiki-content)\n-   [System Overview](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#system-overview)\n  -   [Room Joins](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#dataroomdatajs)\n  -   [Bot Commands](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#libbotbotcommandsjs)\n  -   [Wiki Data](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#kbasejs)\n  -   [Room Messages](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#roommessagesjs)\n-   [Create own bot command](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#how-to-add-a-new-bot-command)\n-   [Bot command details](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#more-detail-on-how-commands-are-found-and-called)\n-   [Environment Notes](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#environment-notes)\n-   [Contributing](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#contributing)\n-   [Chat with us!](https:\/\/github.com\/FreeCodeCamp\/camperbot\/#chat-with-us)\n\n## Introducing CamperBot!\n\nCamperBot is a full featured chat bot for [Gitter.im](https:\/\/gitter.im)\ndeveloped to integrate with the chat rooms for\n[FreeCodeCamp &mdash; the largest online coding bootcamp in the world](https:\/\/www.freecodecamp.org\/)\n, where it serves more than 60,000 campers.\n\n### Github Wiki Search\n\nYou can search for articles in a projects github wiki\n![](https:\/\/freecodecamp.github.io\/camperbot\/images\/anims\/find.gif)\n\n### Share wiki summaries in chat\n\nUse `explain` to pull a wiki summary right into the chat:\n![](https:\/\/freecodecamp.github.io\/camperbot\/images\/anims\/explain.gif)\n\n### Points system\n\nAllow your users to send points to each other to say `thanks @username`\n![](https:\/\/freecodecamp.github.io\/camperbot\/images\/anims\/points.gif)\n\n### Fixed messages\n\nBased on scannable expressions, send messages into the chat.\n\n### Extensible\n\nCustom functions can easily be added. Check the [System Overview](https:\/\/github.com\/FreeCodeCamp\/camperbot#system-overview)\n\n## Installation instructions\n\nTo run camperbot, you need [Node.js](https:\/\/nodejs.org\/) 4.2.0 or greater.\n\n### Mac \/ Linux\n\nTo install Node, [follow the instructions here](http:\/\/blog.teamtreehouse.com\/install-node-js-npm-mac)\n\n-   To make your local server automatically watch for file changes,\n    install \"nodemon\" (you may need `sudo`)\n\n```sh\nnpm install -g nodemon\n```\n\n-   To download the app, clone the repository the bot is in:\n\n```sh\ngit clone https:\/\/github.com\/FreeCodeCamp\/camperbot.git\n```\n\n-   Run the following commands to run the app:\n\n```sh\ncd camperbot\ncp dot-EXAMPLE.env .env\ncp example.config.json config.json\ngit submodule update --remote --checkout --init --recursive\nnpm install\nnodemon app.js\n```\n\n-   That's it! The app should be running at\n    [http:\/\/localhost:7891](http:\/\/localhost:7891).\n\nYou can now chat to your bot via [Gitter.im](https:\/\/gitter.im) at\n[https:\/\/gitter.im\/demobot\/test](https:\/\/gitter.im\/demobot\/test)\n\n### Windows\n\nTo install Node.js on Windows, [follow these instructions](http:\/\/blog.teamtreehouse.com\/install-node-js-npm-windows).\n\n-   To make your local server automatically watch for file changes,\n    install \"nodemon\" in an administrator console.\n\n```sh\nnpm install -g nodemon\n```\n\n-   To download the app, clone the repository the bot is in:\n\n```sh\ngit clone https:\/\/github.com\/FreeCodeCamp\/camperbot.git\n```\n\n-   Run the following commands to run the app:\n\n```sh\ncd camperbot\ncopy dot-EXAMPLE.env .env\ncopy example.config.json config.json\ngit submodule update --remote --checkout --init --recursive\nnpm install\nnodemon app.js\n```\n\n-   That's it! The app should be running at [http:\/\/localhost:7891](http:\/\/localhost:7891).\n\nYou can now chat to your bot via [Gitter.im](https:\/\/gitter.im) at\n[https:\/\/gitter.im\/demobot\/test](https:\/\/gitter.im\/demobot\/test)\n\n## Make your own bot user\nIf you've followed the instructions so far your bot instance is the demobot\nprovided for you.\n\nThe `.env` file you copied above contains login info.\nThis is using the shared \"demobot\" account so you may find yourself in a\nchatroom with other people using the same ID!\n\nHere are instructions on getting your own bot user running.\n### Setup GitHub user\nThe first thing you'll want to do is set up a GitHub account which will be the\nusername of your bot\n\nYou can either\n* make a new account\n* use an existing account\n\nFollow the instructions for signing up on [https:\/\/github.com\/](GitHub)\n\nchange the `SERVER_ENV=demobot` in your `.env` to `server_ENV=USERNAMEHERE`\nwhere *USERNAMEHERE* is your github user name.\n\n### Getting your own appID\n\nTo setup your own gitter login info, you should create your own Gitter API key\non their developer site, and replace the info in that `.env` file.\nGet your own API keys for gitter from:\n[https:\/\/developer.gitter.im\/apps](https:\/\/developer.gitter.im\/apps)\n\nWhen you sign in to the developer page select the option to make an app.\nName the app what you want and set the callback url to\n`http:\/\/localhost:7891\/login\/callback`\n\nThe next page should show you various API keys\/secrets. Use those to replace\nthe demobot default options in your `.env`.\n\n### Configure your bot\nNow it is time to set up your bot w\/ the app.\nCopy `example.config.json` to `config.json` and open `config.json` in your\neditor.\nReplace all instances of GITHUB_USER_ID with your user name\nset up earlier.\n\nTake note of the the rooms property of config. You can set up additional gitter rooms\nto connect your bot to here. The default room is `GITHUB_USERID\/test` feel free to change this.\n\nYou may chat with us in the CamperBot Dev chat room if you have problems. [contributors chatroom](https:\/\/gitter.im\/FreeCodeCamp\/Contributors).\n\n## Running tests\n\nTests are located in the `test\/` folder can be run, along with linting,\nby running `gulp`.\nThis is a watch task that will rerun whenever a `.js` file changes.\n\n## Wiki Content\n\nThe wiki content is pulled in from FCC's wiki using a git submodule.\nBut then we just copy it and commit it back to the main app as submodules\nare nasty to deal with on production servers.\n\n```sh\nbin\/wiki-update.sh\n```\n\n## System Overview\n\n### data\/RoomData.js\n\nThe list of rooms your bot is going to join.\n\nTo start with create your own bot, a test room to enter and debug in.\nThis needs to be changed so you would only join your own rooms, otherwise\ndevelopers will get into a situation where everyone is joining the same\nrooms and the bots go crazy talking to each other!\n\n### lib\/bot\/BotCommands.js\n\nThis is where you add things that the bot can do. Some commands are broken\ninto separate files such as `cmds\/thanks.js` and `cmds\/update.js`.\nEach command gets a `input` which is a blob of data including what the user\nentered, and a bot instance.\n\n### KBase.js\n\nThe Knowledge base. This is an interface to all the data in the wiki.\n\n### RoomMessages.js\n\nThis is for static messages that are fired based on regex matches.\nIf you just want to add some basic responses, this is the place to edit.\n\n### How to add a new Bot Command\n\nLook at `BotCommands`, `echo` function. This is an example of a command being\ncalled. Anytime a user types a line starting with `echo` that will get passed\nto this function in input.\n\n```js\necho: function(input, bot) {\n    var username = input.message.model.fromUser.username;\n    return \"@\" + username + \" said: \" + input.message.model.text;\n}\n```\n\nThe input object contains `keyword` and `params` fields.\nIf you type `echo this` you'll get\n\n```js\n\/\/input\n{\n    keyword: 'echo',\n    params: 'this'\n}\n```\n\nFrom any command you just return the new string you want to output.\nSo you can add new commands with this knowledge.\n\n### More detail on how commands are found and called\n\nIn `GBot.js`\n\n```js\nif (input.command) {\n    \/\/ this looks up a command and calls it\n    output = BotCommands[input.keyword](input, this);\n} else {\n```\n\n`BotCommands` is a list of functions. E.g.\n\n```js\nBotCommands.thanks = function() { ... }\n```\n\nwhere `input.keyword` is `thanks` then\n\n`BotCommands[input.keyword]` is like saying `BotCommands.thanks()`\n\nso then the params get also added in `(input, this)` so its\n\n```js\nBotCommands[input.keyword](input, this);\n\/\/becomes\nBotCommands.thanks(input, bot);\n```\n\nAll of the bot commands expect these two params. E.g. in `thanks.js`\n\n```js\nvar commands = {\n    thanks: function (input, bot) {\n```\n\nIn `RoomMessages.js` we also have a table of regex and matching functions.\n\n```js\n{\n    regex: \/\\bth?a?n?[xk]s?q?\\b\/gim,\n    func: BotCommands.thanks\n}\n```\n\n> We may switch all to just use this method in future. Would you like to help?\n\n## Environment Notes\n\n### wiki data\n\nWe use git submodules for some wiki data. to get these submodules you would do:\n\n```sh\ngit submodule update --remote --checkout --init --recursive\n```\n\n## Contributing\n\nHave a look at the\n[HelpWanted](https:\/\/github.com\/FreeCodeCamp\/camperbot\/issues?q=is%3Aopen+label%3A%22help+wanted%22)\nlabel issues and consider making some first steps!\n\nThe labels, P1 = priority one, and 'S' means a small task,\nso good places to start.\n\n## Chat with us!\n\nChat with us in the\n[contributors chatroom](https:\/\/gitter.im\/FreeCodeCamp\/Contributors) if you get stuck.\n","23":"This bot will automatically check if pull requests follow repositories contribution guidelines. It helps moderate pull requests and notifies when a pull request is synchronized (see this [blog post](https:\/\/github.com\/blog\/964-all-of-the-hooks)).\n\n## How To Contribute or Run Your Own Bot?\n\n```bash\ngit clone https:\/\/github.com\/freeCodeCamp\/camper-gh-bot.git\ncd camper-gh-bot\nnpm install\n```\n\n-  Create a new account for the bot (or use an existing one)\n-  Settings > Personal access tokens > Generate new token\n-  Only check `public_repo` and click Generate token\n-  Create an `.env` file in project's root with the following in it:\n`GITHUB_TOKEN=insert_token_here`\n-  Set in your `.env` file a Secret key which will be used for [securing your webhook](https:\/\/developer.github.com\/webhooks\/securing\/):\n`SECRET_TOKEN=insert_key_here`\n- Define rules for your repositories in `repo-rules.json` file (see below)\n-  `npm start`\n\n## How To Use?\n\n- Go to\n - your project on GitHub > Settings > Webhooks & services > Add Webhook or\n - your organization on GitHub > Settings > Webhooks > Add Webhook\n- Payload URL: For example, `https:\/\/fcc-pr-bot.herokuapp.com\/`\n- Let me select individual events > Check only `Pull Request`\n- Set your Secret key (the same as in `.env` file)\n- Add Webhook\n\nAnd you are done. **Note that bot must have write access to the repository to be able to close pull requests.**\n\n## Configuration\n\nAll configuration goes to `repo-rules.json` file. You can specify different configs for your repositories.\n\n```js\n{\n  \"freeCodeCamp\/camper-gh-bot\": {\n    \"userForbiddenForPR\": [], \/\/ PRs made by users in this list will be closed. To close PRs from EVERYONE add a star symbol to this array: `\"userForbiddenForPR\": [\"*\"]`\n    \"closeAllPRsMessage\": \"\", \/\/ MUST be specified if `userForbiddenForPR` array contains a star sumbol (see above)\n    \"userBlacklistForPR\": [], \/\/ PRs made by users in this list will be ignored\n    \"actions\": [], \/\/ List of PR actions that camper-gh-bot will listen to\n    \"repoContribPath\": \"\" \/\/ Path to you CONTRIBUTION.md file (should start with a slash, for example, \/blob\/master\/.github\/CONTRIBUTING.md)\n    \"rules\": {\n      \"critical\": {\n        \"blacklistedBaseBranchNames\": [], \/\/ Do not open PR's against branches from this list\n        \"blacklistedHeadBranchNames\": [], \/\/ Do not open PR's from branches in this list\n        \"allowedFileNames\": [] \/\/ Test all filenames against this (for expamle, \"[\\\\w\\\\d-]+\\\\.md$\"). Close the PR if not all filenames satisfy this rule\n      },\n      \"allowedBranchNames\": [], \/\/ Allowed branch name prefixes\n      \"closeKeywords\": [], \/\/  Keywords which PR titles and commit messages should not contain\n      \"maxCommitCount\": 1 \/\/ Max number of allowed commit messages count. If exceeded, bot will ask to squash commits.\n    }\n  }\n}\n```\n\nIf you would like the camper-gh-bot to function on private repositories, set the `GITHUB_USER` and `GITHUB_PASSWORD` environment variables or add them to `.env` file. You must disable two-factor authentication or you will receive a console log like this: `Login to ${USERNAME} failed`.\n\n## License\n\ncamper-gh-bot is available via [`BSD 3-clause \u201cNew\u201d or \u201cRevised\u201d License`](.\/LICENSE.md).\n\nThis project is based on Facebook's [mention-bot](https:\/\/github.com\/facebook\/mention-bot). Please refer [`docs`](.\/docs\/) for their licenses and patents grant which is also applicable to parts of this software.\n","24":"# react-router-bootstrap\nIntegration between [React Router](https:\/\/github.com\/rackt\/react-router) and [React-Bootstrap](https:\/\/github.com\/react-bootstrap\/react-bootstrap).\n\n[![Build Status](https:\/\/travis-ci.org\/react-bootstrap\/react-router-bootstrap.svg?branch=master)](https:\/\/travis-ci.org\/react-bootstrap\/react-router-bootstrap)\n[![npm version](https:\/\/badge.fury.io\/js\/react-router-bootstrap.svg)](http:\/\/badge.fury.io\/js\/react-router-bootstrap)\n\n## Usage\n\nWrap your React-Bootstrap element in a `LinkContainer` to make it behave like a React Router `Link`:\n\n```js\n<LinkContainer to={{ pathname: '\/foo', query: { bar: 'baz' } }}>\n  <Button>Foo<\/Button>\n<\/LinkContainer>\n```\n\nTo disable the element and the link, set the `disabled` prop on the `LinkContainer`. For the equivalent of `IndexLink`, use `IndexLinkContainer`.\n\nAs with React Router's `Link`, returning `false` from an `onClick` handler on `LinkContainer` will prevent the transition. However, this behavior will not apply to any `onClick` on the child, which instead will have to call `event.preventDefault()` explicitly to prevent the transition.\n\n## Installation\n\n**Note:** Releases from v0.20.0 onward only support React Router v2.x. For React Router 1.x support, use v0.19.3 or earlier.\n\n```\nnpm install react-router-bootstrap\n```\n\nYou will also want to have React Router and React-Bootstrap.\n\n```\nnpm install react-router react-bootstrap\n```\n\n## Contributing\n\nSee [CONTRIBUTING](CONTRIBUTING.md).\n","25":"PM2 Pager\n\nGet notifications on exception from pm2 through nodemailer\n","26":"# Project Status\n\nThe project has ended as we have moved our wiki to the forum, there are some outstanding issues, if you would like to fix them and continue to use the codebase, feel free to do so and submit your pull request with the changes.\n\n## Scripts for deploying the wiki to `gh-pages`\n\n## Requirements\n\n- Currently the generator has only been tested to **work** on a 64 bit machine running **Ubuntu 16.04**.\n- A machine running **OSX** should also **work** as will any other linux machine.\n- **Windows** is currently **not supported**. If you want to bring support for Windows, you are welcome to submit a pull request.\n- You will have to set **SSL** for your github account.\n- You need to have **write access** to the [**Wiki**](https:\/\/github.com\/FreeCodeCamp\/wiki) repository, otherwise you will not be able to deploy, only build.\n\n## Instructions\n\nThese are the manual instructions. If you are having errors along the way, these series of commands will make it easier to debug.\n\n1. Install all packages with `npm install`\n2. Initialize and update submodules with `npm run init-pages`\n3. Clean and create the structure for the pages with `npm run create-struc`\n4. Build with `npm run build`\n5. Copy the assets with `npm run copy-assets`\n6. Copy the templates with `npm run copy-templates`\n7. Run a local instance with `npm run start`. This will serve the wiki on `http:\/\/0.0.0.0:8000\/`  **Note** that you would actually have to navigate to `http:\/\/0.0.0.0:8000\/en\/` or whichever language you want to actually see all the changes. Either way, make sure the url ends with `\/`.\n8. When satisfied with your changes, stop the script with `ctrl` + `c`. Use the command `npm run save-pages` to update the gatsby wiki. This will commit changes with the date as the commit message `\"Page built on date +\"%d-%m-%Y %T\"`\n\n## Updating the Live Wiki\n\nIf you just want to deploy without previewing first then run `npm run just-deploy`.\n\n## Directly build and preview\n\nIf you already made your changes and just want to quickly build and start the preview in the browser then run `npm run preview`.\n\n> Note: this will not deploy automatically, you will need to run `npm run save-page` to update the gatsby wiki.\n","27":"[![MEAN.JS Logo](http:\/\/meanjs.org\/img\/logo-small.png)](http:\/\/meanjs.org\/)\n\n[![Build Status](https:\/\/travis-ci.org\/meanjs\/mean.svg?branch=master)](https:\/\/travis-ci.org\/meanjs\/mean)\n[![Dependencies Status](https:\/\/david-dm.org\/meanjs\/mean.svg)](https:\/\/david-dm.org\/meanjs\/mean)\n[![Gitter](https:\/\/badges.gitter.im\/Join Chat.svg)](https:\/\/gitter.im\/meanjs\/mean?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nMEAN.JS is a full-stack JavaScript open-source solution, which provides a solid starting point for [MongoDB](http:\/\/www.mongodb.org\/), [Node.js](http:\/\/www.nodejs.org\/), [Express](http:\/\/expressjs.com\/), and [AngularJS](http:\/\/angularjs.org\/) based applications. The idea is to solve the common issues with connecting those frameworks, build a robust framework to support daily development needs, and help developers use better practices while working with popular JavaScript components.\n\n## Before You Begin\nBefore you begin we recommend you read about the basic building blocks that assemble a MEAN.JS application:\n* MongoDB - Go through [MongoDB Official Website](http:\/\/mongodb.org\/) and proceed to their [Official Manual](http:\/\/docs.mongodb.org\/manual\/), which should help you understand NoSQL and MongoDB better.\n* Express - The best way to understand express is through its [Official Website](http:\/\/expressjs.com\/), which has a [Getting Started](http:\/\/expressjs.com\/starter\/installing.html) guide, as well as an [ExpressJS Guide](http:\/\/expressjs.com\/guide\/error-handling.html) guide for general express topics. You can also go through this [StackOverflow Thread](http:\/\/stackoverflow.com\/questions\/8144214\/learning-express-for-node-js) for more resources.\n* AngularJS - Angular's [Official Website](http:\/\/angularjs.org\/) is a great starting point. You can also use [Thinkster Popular Guide](http:\/\/www.thinkster.io\/), and the [Egghead Videos](https:\/\/egghead.io\/).\n* Node.js - Start by going through [Node.js Official Website](http:\/\/nodejs.org\/) and this [StackOverflow Thread](http:\/\/stackoverflow.com\/questions\/2353818\/how-do-i-get-started-with-node-js), which should get you going with the Node.js platform in no time.\n\n\n## Prerequisites\nMake sure you have installed all of the following prerequisites on your development machine:\n* Node.js - [Download & Install Node.js](http:\/\/www.nodejs.org\/download\/) and the npm package manager. If you encounter any problems, you can also use this [GitHub Gist](https:\/\/gist.github.com\/isaacs\/579814) to install Node.js.\n* MongoDB - [Download & Install MongoDB](http:\/\/www.mongodb.org\/downloads), and make sure it's running on the default port (27017).\n* Bower - You're going to use the [Bower Package Manager](http:\/\/bower.io\/) to manage your front-end packages. Make sure you've installed Node.js and npm first, then install bower globally using npm:\n\n```bash\n$ npm install -g bower\n```\n\n* Grunt - You're going to use the [Grunt Task Runner](http:\/\/gruntjs.com\/) to automate your development process. Make sure you've installed Node.js and npm first, then install grunt globally using npm:\n\n```bash\n$ npm install -g grunt-cli\n```\n\n## Downloading MEAN.JS\nThere are several ways you can get the MEAN.JS boilerplate:\n\n### Yo Generator\nThe recommended way would be to use the [Official Yo Generator](http:\/\/meanjs.org\/generator.html), which generates the latest stable copy of the MEAN.JS boilerplate and supplies multiple sub-generators to ease your daily development cycles.\n\n### Cloning The GitHub Repository\nYou can also use Git to directly clone the MEAN.JS repository:\n```bash\n$ git clone https:\/\/github.com\/meanjs\/mean.git meanjs\n```\nThis will clone the latest version of the MEAN.JS repository to a **meanjs** folder.\n\n### Downloading The Repository Zip File\nAnother way to use the MEAN.JS boilerplate is to download a zip copy from the [master branch on GitHub](https:\/\/github.com\/meanjs\/mean\/archive\/master.zip). You can also do this using `wget` command:\n```bash\n$ wget https:\/\/github.com\/meanjs\/mean\/archive\/master.zip -O meanjs.zip; unzip meanjs.zip; rm meanjs.zip\n```\nDon't forget to rename **mean-master** after your project name.\n\n## Quick Install\nOnce you've downloaded the boilerplate and installed all the prerequisites, you're just a few steps away from starting to develop your MEAN application.\n\nThe first thing you should do is install the Node.js dependencies. The boilerplate comes pre-bundled with a package.json file that contains the list of modules you need to start your application. To learn more about the modules installed visit the NPM & Package.json section.\n\nTo install Node.js dependencies you're going to use npm again. In the application folder run this in the command-line:\n\n```bash\n$ npm install\n```\n\nThis command does a few things:\n* First it will install the dependencies needed for the application to run.\n* If you're running in a development environment, it will then also install development dependencies needed for testing and running your application.\n* Finally, when the install process is over, npm will initiate a bower install command to install all the front-end modules needed for the application.\n\n## Running Your Application\nAfter the install process is over, you'll be able to run your application using Grunt. Just run grunt default task:\n\n```bash\n$ grunt\n```\n\nYour application should run on port 3000, so in your browser just go to [http:\/\/localhost:3000](http:\/\/localhost:3000)\n\nThat's it! Your application should be running. To proceed with your development, check the other sections in this documentation.\nIf you encounter any problems, try the Troubleshooting section.\n\n## Testing Your Application\nYou can run the full test suite included with MEAN.JS with the test task:\n\n```\n$ grunt test\n```\n\nThis will run both the server-side tests (located in the app\/tests\/ directory) and the client-side tests (located in the public\/modules\/*\/tests\/).\n\nTo execute only the server tests, run the test:server task:\n\n```\n$ grunt test:server\n```\n\nAnd to run only the client tests, run the test:client task:\n\n```\n$ grunt test:client\n```\n\n## Development and deployment With Docker\n\n* Install [Docker](http:\/\/www.docker.com\/)\n* Install [Fig](https:\/\/github.com\/orchardup\/fig)\n\n* Local development and testing with fig:\n```bash\n$ fig up\n```\n\n* Local development and testing with just Docker:\n```bash\n$ docker build -t mean .\n$ docker run -p 27017:27017 -d --name db mongo\n$ docker run -p 3000:3000 --link db:db_1 mean\n$\n```\n\n* To enable live reload, forward port 35729 and mount \/app and \/public as volumes:\n```bash\n$ docker run -p 3000:3000 -p 35729:35729 -v \/Users\/mdl\/workspace\/mean-stack\/mean\/public:\/home\/mean\/public -v \/Users\/mdl\/workspace\/mean-stack\/mean\/app:\/home\/mean\/app --link db:db_1 mean\n```\n\n## Running in a secure environment\nTo run your application in a secure manner you'll need to use OpenSSL and generate a set of self-signed certificates. Unix-based users can use the following command:\n```bash\n$ sh .\/scripts\/generate-ssl-certs.sh\n```\nWindows users can follow instructions found [here](http:\/\/www.websense.com\/support\/article\/kbarticle\/How-to-use-OpenSSL-and-Microsoft-Certification-Authority).\nAfter you've generated the key and certificate, place them in the *config\/sslcerts* folder.\n\n## Getting Started With MEAN.JS\nYou have your application running, but there is a lot of stuff to understand. We recommend you go over the [Official Documentation](http:\/\/meanjs.org\/docs.html).\nIn the docs we'll try to explain both general concepts of MEAN components and give you some guidelines to help you improve your development process. We tried covering as many aspects as possible, and will keep it updated by your request. You can also help us develop and improve the documentation by checking out the *gh-pages* branch of this repository.\n\n## Community\n* Use the [Official Website](http:\/\/meanjs.org) to learn about changes and the roadmap.\n* Join #meanjs on freenode.\n* Discuss it in the new [Google Group](https:\/\/groups.google.com\/d\/forum\/meanjs)\n* Ping us on [Twitter](http:\/\/twitter.com\/meanjsorg) and [Facebook](http:\/\/facebook.com\/meanjs)\n\n## Live Example\nBrowse the live MEAN.JS example on [http:\/\/meanjs.herokuapp.com](http:\/\/meanjs.herokuapp.com).\n\n## Credits\nInspired by the great work of [Madhusudhan Srinivasa](https:\/\/github.com\/madhums\/)\nThe MEAN name was coined by [Valeri Karpov](http:\/\/blog.mongodb.org\/post\/49262866911\/the-mean-stack-mongodb-expressjs-angularjs-and)\n\n## License\n(The MIT License)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and\/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","28":"# NYC Outward Bound \n\n### Description\n\nAn open source data management tracking system originally built for NYC outward bound\nto allow them to track their leavers.\n\n### Running For the First Time\n\n #### Prerequisites\n   * Make sure mongodb server is installed and running\n\n #### Start server\n   * cd into the project directory\n   * Run `npm i` to install dependencies\n   * Run - `cp sample.env .env` and fill env values in **.env** file (MONGODB_URI value for development could be - \"mongodb:\/\/localhost:27017\/\")\n   * Start server - \"npm run watch\"\n\n### Import production data\n\nRun `npm run import YOUR_TAR_FILE_NAME`\n\n\n#### Notes:-\n * Use node < 7, for node-inspector to work properly (See:- https:\/\/github.com\/node-inspector\/v8-debug\/issues\/33)\n\n","29":"# cz-freecodecamp\n\n[![Greenkeeper badge](https:\/\/badges.greenkeeper.io\/freeCodeCamp\/cz-freecodecamp.svg)](https:\/\/greenkeeper.io\/)\n\nStatus:\n[![Build Status](https:\/\/travis-ci.org\/freeCodeCamp\/cz-freecodecamp.svg?branch=master)](https:\/\/travis-ci.org\/freeCodeCamp\/cz-freecodecamp)\n\nA plugin for [commitizen](https:\/\/github.com\/commitizen\/cz-cli) built for\nfreeCodeCamp\n\n**Table of Contents**\n\n- [Introduction](#introduction)\n- [Installation](#installation)\n- [Usage](#usage)\n\n# Introduction\n\nThis Commitizen adapter helps standardize commit messages for freeCodeCamp so\nbeing asked to fix incorrectly formatted commit messages will be less of a\nproblem.\n\n# Installation\n\nInstall as a global adapter for freeCodeCamp repos\n\n```shell\n# Install the commitizen cli globally\nnpm install --global commitizen\n\n# Install the freeCodeCamp commitizen adapter globally\nnpm install --global cz-freecodecamp\n\n# Save the adapter into global config\necho '{ \"path\": \"cz-freecodecamp\" }' > ~\/.czrc\n\n```\n\n# Usage\n\nUsage on freeCodeCamp's repos\n\n```shell\n... # Make changes\n\n# Stage changes\ngit add changed-file\n\n# This adapter is bundled in the freeCodeCamp main repo as a dependancy.\n# Either use the inbuilt script\nnpm run commit\n\n# Or alternatively on any of freeCodeCamp's repos including the main repo,\n# use git cz instead of git commit\ngit cz\n```\n\nNote: Please check the [contributing guidelines](https:\/\/github.com\/freeCodeCamp\/freeCodeCamp\/blob\/staging\/CONTRIBUTING.md#method-1-editing-via-your-local-fork-recommended) on the main repo for more on usage.\n","30":"# gatsby-starter-default\nThe default Gatsby starter.\n\nFor an overview of the project structure please refer to the [Gatsby documentation - Building with Components](https:\/\/www.gatsbyjs.org\/docs\/building-with-components\/).\n\n## Install\n\nMake sure that you have the Gatsby CLI program installed:\n```sh\nnpm install --global gatsby-cli\n```\n\nAnd run from your CLI:\n```sh\ngatsby new gatsby-example-site\n```\n\nThen you can run it by:\n```sh\ncd gatsby-example-site\nnpm run develop\n```\n\n## Deploy\n\n[![Deploy to Netlify](https:\/\/www.netlify.com\/img\/deploy\/button.svg)](https:\/\/app.netlify.com\/start\/deploy?repository=https:\/\/github.com\/gatsbyjs\/gatsby-starter-default)\n","31":"## Our Communities Donation Page\n","32":"# This repository is no longer in use\n\nPlease use the [search mono repo](https:\/\/github.com\/freeCodeCamp\/search-mono-repo) instead.\n\nHappy Coding!!\n","33":"# This repository is no longer in use\n\nPlease use the [search mono repo](https:\/\/github.com\/freeCodeCamp\/search-mono-repo) instead.\n\nHappy Coding!!\n","34":"# donate-css\n\ndonate page for code for science & society\n\nFeatures:\n\n* Donate via Stripe\n* Simple express server to handle payments\n\n## Development\n\n* `npm run dev` to run server and watch client javascript files + rebuild automatically\n* `npm start` to build and run server for production\n\n### Config\n\nCopy the config file to `config.yml`:\n\n```\ncp example.config.yml config.yml\n```\n\nAnd set your stripe keys. You can also set the stripe keys as environment variables:\n\n```\nprocess.env.SECRET_KEY\nprocess.env.PUBLISHABLE_KEY\n```\n\n## License\n\n[MIT](LICENSE.md)\n","35":"# freeCodeCamp Conference for Good\n\n**This app is currently in production and is being actively developed by a freeCodeCamp team for a non-profit organization. Once the current phase ends the goal is to open the project to outside contributions as an Open Source for Good project.**"}}